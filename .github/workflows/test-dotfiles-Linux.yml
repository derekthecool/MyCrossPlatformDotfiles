name: Run Pester Tests on Linux

on: [push, pull_request]

jobs:
  test:
    name: Pester Test Runner on ${{ matrix.container }}
    runs-on: ubuntu-latest # Using Ubuntu host to run containers

    strategy:
      fail-fast: false
      matrix:
        container:
          - ubuntu:22.04
          - ubuntu:20.04
          - debian:bullseye
          - debian:buster
          - centos:8
          - centos:7
          - fedora:latest
          - alpine:latest

    container:
      image: ${{ matrix.container }}

    steps:
      - name: Check out repository code
        uses: actions/checkout@v2

      - name: Setup Environment
        run: |
          if [ -f /etc/debian_version ]; then
            # For Debian and Ubuntu
            apt-get update
            apt-get install -y wget apt-transport-https software-properties-common
            wget -q "https://packages.microsoft.com/config/debian/$(. /etc/os-release && echo $VERSION_ID)/packages-microsoft-prod.deb"
            dpkg -i packages-microsoft-prod.deb
            apt-get update
            apt-get install -y powershell
          elif [ -f /etc/fedora-release ]; then
            # For Fedora
            dnf install -y wget
            rpm --import https://packages.microsoft.com/keys/microsoft.asc
            dnf config-manager --add-repo https://packages.microsoft.com/fedora/$(. /etc/os-release && echo $VERSION_ID)/prod
            dnf install -y powershell
          elif [ -f /etc/centos-release ]; then
            # For CentOS
            yum install -y wget
            yum install -y powershell
          elif [ -f /etc/alpine-release ]; then
            # For Alpine
            apk add --no-cache powershell
          fi

      - name: Install and Configure PowerShell Environment
        run: |
          pwsh -Command "
            # Ensure PowerShellGet and Pester are installed
            [Net.ServicePointManager]::SecurityProtocol = [Net.SecurityProtocolType]::Tls12
            if (-not (Get-Module -ListAvailable -Name PowerShellGet)) {
              Install-PackageProvider -Name NuGet -Force
              Install-Module -Name PowerShellGet -Force -AllowClobber
            }
            Install-Module -Name Pester -RequiredVersion 5.3.1 -Force -SkipPublisherCheck
          "

      - name: Run Pester Tests
        shell: pwsh
        run: |
          Invoke-Pester -Path './Scripts/Tests' -Passthru -Output Detailed
